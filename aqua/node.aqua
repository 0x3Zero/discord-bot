module Node declares *

data Cron:
  hash: string
  token_key: string
  address: string
  topic: string
  token_type: string
  chain: string
  status: i64
  meta_contract_id: string
  node_url: string
  public_key: string
  abi_url: string
  last_processed_block: u64

data CronTx:
  hash: string
  address: string
  topic: string
  token_type: string
  chain: string
  meta_contract_id: string
  timestamp: u64
  tx_block_number: u64
  tx_hash: string
  status: i64
  data: string
  error_text: string
  token_id: string
  data_key: string
  token_key: string

data DataTypeFork:
  data: string
  token_id: string
  address: string

data FdbClock:
  timestamp: i64

data FdbCronTxResult:
  success: bool
  err_msg: string
  cron_tx: CronTx

data FdbCronTxsResult:
  success: bool
  err_msg: string
  cron_txs: []CronTx

data FdbCronsResult:
  success: bool
  err_msg: string
  crons: []Cron

data MetaContract:
  hash: string
  token_key: string
  meta_contract_id: string
  public_key: string
  cid: string

data FdbMetaContractResult:
  success: bool
  err_msg: string
  meta: MetaContract

data FdbMetadataHistoryResult:
  success: bool
  err_msg: string
  metadata: string
  history: []string

data Metadata:
  hash: string
  token_key: string
  data_key: string
  meta_contract_id: string
  token_id: string
  alias: string
  cid: string
  public_key: string
  version: string
  loose: i64

data FdbMetadataResult:
  success: bool
  err_msg: string
  metadata: Metadata

data FdbMetadatasResult:
  success: bool
  err_msg: string
  metadatas: []Metadata

data FdbResult:
  transaction_hash: string

data TransactionReceipt:
  hash: string
  meta_contract_id: string
  status: i64
  timestamp: u64
  error_text: string
  data: string

data FdbTransactionReceiptResult:
  success: bool
  err_msg: string
  receipt: TransactionReceipt

data Transaction:
  hash: string
  method: string
  meta_contract_id: string
  data_key: string
  token_key: string
  data: string
  public_key: string
  alias: string
  timestamp: u64
  chain_id: string
  token_address: string
  token_id: string
  version: string
  status: i64
  mcdata: string

data FdbTransactionResult:
  success: bool
  err_msg: string
  transaction: Transaction

data FdbTransactionsResult:
  success: bool
  err_msg: string
  transactions: []Transaction

data FinalMetadata:
  public_key: string
  alias: string
  content: string
  loose: i64
  version: string

data MetadataOrdering:
  column: string
  sort: string

data MetadataQuery:
  column: string
  query: string
  op: string

data TransactionOrdering:
  column: string
  sort: string

data TransactionQuery:
  column: string
  query: string
  op: string

data TransactionRequest:
  meta_contract_id: string
  alias: string
  public_key: string
  signature: string
  data: string
  method: string
  chain_id: string
  token_address: string
  token_id: string
  version: string
  mcdata: string

service Node("transaction"):
  get_complete_transactions(from: i64, to: i64) -> FdbTransactionsResult
  get_node_clock() -> FdbClock